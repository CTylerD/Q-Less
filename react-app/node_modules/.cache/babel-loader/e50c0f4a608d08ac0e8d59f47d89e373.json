{"ast":null,"code":"var _jsxFileName = \"/Users/Tyla/Documents/Programming/OSU/Classes/361/cs361/qless/react-app/src/components/Board.js\";\nimport BoardSquare from \"../components/BoardSquare.js\";\nimport { Dice, rollDice } from \"../components/Dice.js\";\nimport { useState, useRef } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet diceArray, boardArray, currentBoardState;\nexport function saveGame() {\n  let savedGame = {\n    \"dice\": diceArray,\n    \"words\": [],\n    \"board\": currentBoardState\n  };\n  axios.post('http://localhost:5555/save').then(response => {\n    console.log(response);\n  }).catch(error => {\n    console.log(error);\n  });\n  return newGame;\n}\n\nfunction newGame() {\n  diceArray = rollDice();\n  boardArray = buildBoard();\n}\n\nfunction buildBoard() {\n  boardArray = [];\n\n  for (let i = 0; i < 12; i++) {\n    for (let j = 0; j < 12; j++) {\n      // let boardSquare = document.createElement(\"BoardSquare\");\n      // boardSquare.id = `${j}-${i}`;\n      // boardSquare.className = \"boardsquare\"\n      // let dice = document.createElement(\"Dice\");\n      // dice.className = \"dice\";\n      // dice.innerText = diceArray[j];\n      // boardSquare.appendChild(dice);\n      if (i === 0) {\n        boardArray.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          id: `${j}-${i}`,\n          className: \"boardsquare\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dice\",\n            children: diceArray[j]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 77\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 31\n        }, this));\n      } else {\n        boardArray.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          id: `${j}-${i}`,\n          className: \"boardsquare\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 31\n        }, this));\n      }\n    }\n  }\n\n  return boardArray;\n}\n\nexport default function Board() {\n  newGame();\n  let activeDice = null;\n\n  function grabPiece(e) {\n    const element = e.target;\n    const board = boardRef.current;\n\n    if (element.classList.contains(\"dice\") && board) {\n      const x = e.clientX - 30;\n      const y = e.clientY - 30;\n      element.style.position = \"absolute\";\n      element.style.left = `${x}px`;\n      element.style.top = `${y}px`;\n      activeDice = element;\n    }\n  }\n\n  function movePiece(e) {\n    const board = boardRef.current;\n\n    if (activeDice && board) {\n      const minX = board.offsetLeft;\n      const minY = board.offsetTop;\n      const maxX = board.offsetLeft + board.clientWidth - 45;\n      const maxY = board.offsetTop + board.clientHeight - 45;\n      const x = e.clientX - 30;\n      const y = e.clientY - 30;\n      activeDice.style.position = \"absolute\";\n\n      if (x > maxX) {\n        activeDice.style.left = `${maxX - 7}px`; //activeDice = null;\n      } else if (x < minX) {\n        activeDice.style.left = `${minX + 5}px`; //activeDice = null;\n      } else {\n        activeDice.style.left = `${x}px`;\n      }\n\n      if (y > maxY) {\n        activeDice.style.top = `${maxY - 9}px`; //activeDice = null;\n      } else if (y < minY) {\n        activeDice.style.top = `${minY + 5}px`; //activeDice = null;\n      } else {\n        activeDice.style.top = `${y}px`;\n      }\n    }\n  }\n\n  function dropPiece(e) {\n    if (activeDice) {\n      const element = e.target;\n      element.parentNode.removeChild(element);\n      let currElems = document.elementsFromPoint(e.clientX, e.clientY);\n      let parentSquare = Array.from(currElems).filter(fil => fil.className == \"boardsquare\")[0];\n      parentSquare.appendChild(element);\n      let offsets = parentSquare.getBoundingClientRect();\n      const x = offsets.left + 1;\n      const y = offsets.top + 1;\n      activeDice.style.top = `${y}px`;\n      activeDice.style.left = `${x}px`;\n      activeDice.style.position = \"static\";\n      activeDice = null;\n      currentBoardState = exportBoardArray();\n    }\n  }\n\n  function getBoardSquares() {\n    let board = boardRef.current;\n    return board.getElementsByClassName(\"boardsquare\");\n  }\n\n  function exportBoardArray() {\n    let boardStateArray = [];\n    let board = getBoardSquares();\n\n    for (const square of board) {\n      let squareContents = square.getElementsByClassName(\"dice\");\n      let contents = squareContents.item(0);\n\n      if (contents) {\n        boardStateArray.push(contents.textContent);\n      } else {\n        boardStateArray.push(null);\n      }\n    }\n\n    return boardStateArray;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onMouseDown: e => grabPiece(e),\n    onMouseMove: e => movePiece(e),\n    onMouseUp: e => dropPiece(e),\n    on: true,\n    className: \"board\",\n    ref: boardRef,\n    children: boardArray\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 13\n  }, this);\n}\n_c = Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["BoardSquare","Dice","rollDice","useState","useRef","axios","diceArray","boardArray","currentBoardState","saveGame","savedGame","post","then","response","console","log","catch","error","newGame","buildBoard","i","j","push","Board","activeDice","grabPiece","e","element","target","board","boardRef","current","classList","contains","x","clientX","y","clientY","style","position","left","top","movePiece","minX","offsetLeft","minY","offsetTop","maxX","clientWidth","maxY","clientHeight","dropPiece","parentNode","removeChild","currElems","document","elementsFromPoint","parentSquare","Array","from","filter","fil","className","appendChild","offsets","getBoundingClientRect","exportBoardArray","getBoardSquares","getElementsByClassName","boardStateArray","square","squareContents","contents","item","textContent"],"sources":["/Users/Tyla/Documents/Programming/OSU/Classes/361/cs361/qless/react-app/src/components/Board.js"],"sourcesContent":["import BoardSquare from \"../components/BoardSquare.js\"\nimport {Dice, rollDice} from \"../components/Dice.js\"\nimport {useState, useRef} from \"react\";\nimport axios from 'axios';\n\nlet diceArray, boardArray, currentBoardState;\n\nexport function saveGame () {\n    let savedGame = {\"dice\": diceArray,\n    \"words\": [],\n    \"board\": currentBoardState\n    }\n\n    axios.post('http://localhost:5555/save')\n        .then(response => {console.log(response);})\n        .catch(error => {console.log(error);})\n    \n    return newGame;\n}\n\nfunction newGame () {\n  diceArray = rollDice();\n  boardArray = buildBoard();\n}\n\nfunction buildBoard() {\n  boardArray = [];\n  for (let i = 0; i < 12; i++) {\n      for (let j = 0; j < 12; j++) {\n          // let boardSquare = document.createElement(\"BoardSquare\");\n          // boardSquare.id = `${j}-${i}`;\n          // boardSquare.className = \"boardsquare\"\n          // let dice = document.createElement(\"Dice\");\n          // dice.className = \"dice\";\n          // dice.innerText = diceArray[j];\n          // boardSquare.appendChild(dice);\n          if (i === 0) {\n              boardArray.push(<div id={`${j}-${i}`} className=\"boardsquare\"><div className=\"dice\">{diceArray[j]}</div></div>);\n          } else {\n              boardArray.push(<div id={`${j}-${i}`} className=\"boardsquare\"></div>);\n          }\n      }\n  }\n  return boardArray;\n}\n\nexport default function Board() {\n    \n    newGame();\n    let activeDice = null;\n\n    function grabPiece(e) {\n        const element = e.target;\n        const board = boardRef.current;\n        \n        if (element.classList.contains(\"dice\") && board) {\n            const x = e.clientX - 30;\n            const y = e.clientY - 30;\n\n            element.style.position = \"absolute\";\n            element.style.left = `${x}px`;\n            element.style.top = `${y}px`;\n            \n            activeDice = element\n            \n        }\n    }\n\n    function movePiece(e) {\n        const board = boardRef.current;\n        if (activeDice && board) { \n\n            const minX = board.offsetLeft;\n            const minY = board.offsetTop;\n            const maxX = board.offsetLeft + board.clientWidth - 45;\n            const maxY = board.offsetTop + board.clientHeight - 45;\n            const x = e.clientX - 30;\n            const y = e.clientY - 30;\n            activeDice.style.position = \"absolute\";\n            \n            if (x > maxX) {\n                activeDice.style.left = `${maxX - 7}px`;\n                //activeDice = null;\n            } else if (x < minX) {\n                activeDice.style.left = `${minX + 5}px`;\n                //activeDice = null;\n            } else {\n                activeDice.style.left = `${x}px`;\n            }\n\n            if (y > maxY) {\n                activeDice.style.top = `${maxY - 9}px`;\n                //activeDice = null;\n            } else if (y < minY) {\n                activeDice.style.top = `${minY + 5}px`;\n                //activeDice = null;\n            } else {\n                activeDice.style.top = `${y}px`;\n            }\n\n        }\n    }\n\n    function dropPiece(e) {\n        if (activeDice) {\n            const element = e.target;\n            element.parentNode.removeChild(element);\n            let currElems = document.elementsFromPoint(e.clientX, e.clientY);\n            let parentSquare = Array.from(currElems).filter(fil => fil.className == \"boardsquare\")[0];\n            parentSquare.appendChild(element);\n            let offsets = parentSquare.getBoundingClientRect();\n\n            const x = offsets.left + 1;\n            const y = offsets.top + 1;\n            activeDice.style.top = `${y}px`;\n            activeDice.style.left = `${x}px`;\n            activeDice.style.position = \"static\";\n\n            activeDice = null;\n\n            currentBoardState = exportBoardArray();\n            \n        }\n    }\n\n    function getBoardSquares() {\n        let board = boardRef.current;\n        return board.getElementsByClassName(\"boardsquare\");\n    }\n    function exportBoardArray() {\n        let boardStateArray = [];\n        let board = getBoardSquares();\n\n        for (const square of board) {\n            let squareContents = square.getElementsByClassName(\"dice\");\n            let contents = squareContents.item(0);\n\n            if (contents) {\n                boardStateArray.push(contents.textContent);\n            } else {\n                boardStateArray.push(null);\n            }\n        }\n        return boardStateArray;\n    }\n\n    return (<div onMouseDown={e => grabPiece(e)}\n                 onMouseMove={e => movePiece(e)}\n                 onMouseUp={e => dropPiece(e)}\n                 on\n                 className=\"board\"\n                 ref={boardRef}>{boardArray}</div>\n                 );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}