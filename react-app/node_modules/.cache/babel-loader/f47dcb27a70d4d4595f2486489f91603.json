{"ast":null,"code":"var _jsxFileName = \"/Users/Tyla/Documents/Programming/OSU/Classes/361/cs361/qless/react-app/src/components/Board.js\",\n    _s = $RefreshSig$();\n\nimport BoardSquare from \"../components/BoardSquare.js\";\nimport { Dice, rollDice } from \"../components/Dice.js\";\nimport { useState, useRef } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport let diceArray, boardArray, currentBoardState;\n\nfunction newGame() {\n  diceArray = rollDice();\n  boardArray = buildBoard();\n  ;\n}\n\nfunction buildBoard() {\n  boardArray = [];\n\n  for (let i = 0; i < 12; i++) {\n    for (let j = 0; j < 12; j++) {\n      // let boardSquare = document.createElement(\"BoardSquare\");\n      // boardSquare.id = `${j}-${i}`;\n      // boardSquare.className = \"boardsquare\"\n      // let dice = document.createElement(\"Dice\");\n      // dice.className = \"dice\";\n      // dice.innerText = diceArray[j];\n      // boardSquare.appendChild(dice);\n      if (i === 0) {\n        boardArray.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          id: `${j}-${i}`,\n          className: \"boardsquare\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dice\",\n            children: diceArray[j]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 77\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 31\n        }, this));\n      } else {\n        boardArray.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          id: `${j}-${i}`,\n          className: \"boardsquare\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 31\n        }, this));\n      }\n    }\n  }\n\n  return boardArray;\n}\n\nexport default function Board() {\n  _s();\n\n  function exportBoardArray() {\n    let boardStateArray = [];\n    let board = getBoardSquares();\n\n    for (const square of board) {\n      let squareContents = square.getElementsByClassName(\"dice\");\n      let contents = squareContents.item(0);\n\n      if (contents) {\n        boardStateArray.push(contents.textContent);\n      } else {\n        boardStateArray.push(null);\n      }\n    }\n\n    return boardStateArray;\n  }\n\n  const boardRef = useRef(null);\n  newGame(); //currentBoardState = exportBoardArray()\n\n  let activeDice = null;\n\n  function grabPiece(e) {\n    const element = e.target;\n    const board = boardRef.current;\n\n    if (element.classList.contains(\"dice\") && board) {\n      const x = e.clientX - 30;\n      const y = e.clientY - 30;\n      element.style.position = \"absolute\";\n      element.style.left = `${x}px`;\n      element.style.top = `${y}px`;\n      activeDice = element;\n    }\n  }\n\n  function movePiece(e) {\n    const board = boardRef.current;\n\n    if (activeDice && board) {\n      const minX = board.offsetLeft;\n      const minY = board.offsetTop;\n      const maxX = board.offsetLeft + board.clientWidth - 45;\n      const maxY = board.offsetTop + board.clientHeight - 45;\n      const x = e.clientX - 30;\n      const y = e.clientY - 30;\n      activeDice.style.position = \"absolute\";\n\n      if (x > maxX) {\n        activeDice.style.left = `${maxX - 7}px`; //activeDice = null;\n      } else if (x < minX) {\n        activeDice.style.left = `${minX + 5}px`; //activeDice = null;\n      } else {\n        activeDice.style.left = `${x}px`;\n      }\n\n      if (y > maxY) {\n        activeDice.style.top = `${maxY - 9}px`; //activeDice = null;\n      } else if (y < minY) {\n        activeDice.style.top = `${minY + 5}px`; //activeDice = null;\n      } else {\n        activeDice.style.top = `${y}px`;\n      }\n    }\n  }\n\n  function dropPiece(e) {\n    if (activeDice) {\n      const element = e.target;\n      element.parentNode.removeChild(element);\n      let currElems = document.elementsFromPoint(e.clientX, e.clientY);\n      let parentSquare = Array.from(currElems).filter(fil => fil.className == \"boardsquare\")[0];\n      parentSquare.appendChild(element);\n      let offsets = parentSquare.getBoundingClientRect();\n      const x = offsets.left + 1;\n      const y = offsets.top + 1;\n      activeDice.style.top = `${y}px`;\n      activeDice.style.left = `${x}px`;\n      activeDice.style.position = \"static\";\n      activeDice = null;\n      currentBoardState = exportBoardArray();\n    }\n  }\n\n  function getBoardSquares() {\n    let board = boardRef.current;\n    return board.getElementsByClassName(\"boardsquare\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onMouseDown: e => grabPiece(e),\n    onMouseMove: e => movePiece(e),\n    onMouseUp: e => dropPiece(e),\n    on: true,\n    className: \"board\",\n    ref: boardRef,\n    children: boardArray\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Board, \"XcdElC4+nkqWjXVI0f2NZ9bgrbc=\");\n\n_c = Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["BoardSquare","Dice","rollDice","useState","useRef","axios","diceArray","boardArray","currentBoardState","newGame","buildBoard","i","j","push","Board","exportBoardArray","boardStateArray","board","getBoardSquares","square","squareContents","getElementsByClassName","contents","item","textContent","boardRef","activeDice","grabPiece","e","element","target","current","classList","contains","x","clientX","y","clientY","style","position","left","top","movePiece","minX","offsetLeft","minY","offsetTop","maxX","clientWidth","maxY","clientHeight","dropPiece","parentNode","removeChild","currElems","document","elementsFromPoint","parentSquare","Array","from","filter","fil","className","appendChild","offsets","getBoundingClientRect"],"sources":["/Users/Tyla/Documents/Programming/OSU/Classes/361/cs361/qless/react-app/src/components/Board.js"],"sourcesContent":["import BoardSquare from \"../components/BoardSquare.js\"\nimport {Dice, rollDice} from \"../components/Dice.js\"\nimport {useState, useRef} from \"react\";\nimport axios from 'axios';\n\nexport let diceArray, boardArray, currentBoardState;\n\nfunction newGame () {\n  diceArray = rollDice();\n  boardArray = buildBoard();;\n}\n\nfunction buildBoard() {\n  boardArray = [];\n  for (let i = 0; i < 12; i++) {\n      for (let j = 0; j < 12; j++) {\n          // let boardSquare = document.createElement(\"BoardSquare\");\n          // boardSquare.id = `${j}-${i}`;\n          // boardSquare.className = \"boardsquare\"\n          // let dice = document.createElement(\"Dice\");\n          // dice.className = \"dice\";\n          // dice.innerText = diceArray[j];\n          // boardSquare.appendChild(dice);\n          if (i === 0) {\n              boardArray.push(<div id={`${j}-${i}`} className=\"boardsquare\"><div className=\"dice\">{diceArray[j]}</div></div>);\n          } else {\n              boardArray.push(<div id={`${j}-${i}`} className=\"boardsquare\"></div>);\n          }\n      }\n  }\n  return boardArray;\n}\n\nexport default function Board() {\n    function exportBoardArray() {\n      let boardStateArray = [];\n      let board = getBoardSquares();\n\n      for (const square of board) {\n          let squareContents = square.getElementsByClassName(\"dice\");\n          let contents = squareContents.item(0);\n\n          if (contents) {\n              boardStateArray.push(contents.textContent);\n          } else {\n              boardStateArray.push(null);\n          }\n      }\n      return boardStateArray;\n    \n    }\n    const boardRef = useRef(null);\n    newGame();\n    //currentBoardState = exportBoardArray()\n    let activeDice = null;\n\n    function grabPiece(e) {\n        const element = e.target;\n        const board = boardRef.current;\n        \n        if (element.classList.contains(\"dice\") && board) {\n            const x = e.clientX - 30;\n            const y = e.clientY - 30;\n\n            element.style.position = \"absolute\";\n            element.style.left = `${x}px`;\n            element.style.top = `${y}px`;\n            \n            activeDice = element\n            \n        }\n    }\n\n    function movePiece(e) {\n        const board = boardRef.current;\n        if (activeDice && board) { \n\n            const minX = board.offsetLeft;\n            const minY = board.offsetTop;\n            const maxX = board.offsetLeft + board.clientWidth - 45;\n            const maxY = board.offsetTop + board.clientHeight - 45;\n            const x = e.clientX - 30;\n            const y = e.clientY - 30;\n            activeDice.style.position = \"absolute\";\n            \n            if (x > maxX) {\n                activeDice.style.left = `${maxX - 7}px`;\n                //activeDice = null;\n            } else if (x < minX) {\n                activeDice.style.left = `${minX + 5}px`;\n                //activeDice = null;\n            } else {\n                activeDice.style.left = `${x}px`;\n            }\n\n            if (y > maxY) {\n                activeDice.style.top = `${maxY - 9}px`;\n                //activeDice = null;\n            } else if (y < minY) {\n                activeDice.style.top = `${minY + 5}px`;\n                //activeDice = null;\n            } else {\n                activeDice.style.top = `${y}px`;\n            }\n\n        }\n    }\n\n    function dropPiece(e) {\n        if (activeDice) {\n            const element = e.target;\n            element.parentNode.removeChild(element);\n            let currElems = document.elementsFromPoint(e.clientX, e.clientY);\n            let parentSquare = Array.from(currElems).filter(fil => fil.className == \"boardsquare\")[0];\n            parentSquare.appendChild(element);\n            let offsets = parentSquare.getBoundingClientRect();\n\n            const x = offsets.left + 1;\n            const y = offsets.top + 1;\n            activeDice.style.top = `${y}px`;\n            activeDice.style.left = `${x}px`;\n            activeDice.style.position = \"static\";\n\n            activeDice = null;\n\n            currentBoardState = exportBoardArray();\n            \n        }\n    }\n\n    function getBoardSquares() {\n        let board = boardRef.current;\n        return board.getElementsByClassName(\"boardsquare\");\n    }\n\n    return (<div onMouseDown={e => grabPiece(e)}\n                 onMouseMove={e => movePiece(e)}\n                 onMouseUp={e => dropPiece(e)}\n                 on\n                 className=\"board\"\n                 ref={boardRef}>{boardArray}</div>\n                 );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}