{"ast":null,"code":"var _jsxFileName = \"/Users/Tyla/Desktop/Programming/OSU/Classes/361/qless/src/components/Board.js\",\n    _s = $RefreshSig$();\n\nimport BoardSquare from \"../components/BoardSquare.js\";\nimport Dice from \"../components/Dice.js\";\nimport { useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet diceArray = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\"];\nexport default function Board() {\n  _s();\n\n  const boardRef = useRef(null); //const [board, setBoard] = useState(initialBoardState);\n\n  let activeDice = null;\n\n  function grabPiece(e) {\n    const element = e.target;\n    const board = boardRef.current;\n\n    if (element.classList.contains(\"dice\") && board) {\n      const grabX = Math.floor((e.clientX - board.offsetLeft) / 60);\n      const grabY = Math.abs(Math.ceil((e.clientY - board.offsetTop - 800) / 60));\n      setGrabPosition({\n        x: grabX,\n        y: grabY\n      });\n      const x = e.clientX - 30;\n      const y = e.clientY - 30;\n      console.log(activeDice.style.top);\n      console.log(y);\n      activeDice.style.position = \"absolute\";\n      activeDice.style.left = `${x}px`;\n      activeDice.style.top = `${y}px`;\n    }\n  }\n\n  function movePiece(e) {\n    const board = boardRef.current;\n\n    if (activeDice && board) {\n      console.log(activeDice);\n      const minX = board.offsetLeft;\n      const minY = board.offsetTop;\n      const maxX = board.offsetLeft + board.clientWidth - 45;\n      const maxY = board.offsetTop + board.clientHeight - 45;\n      const x = e.clientX - 30;\n      const y = e.clientY - 30;\n      activeDice.style.position = \"absolute\";\n\n      if (x > maxX) {\n        activeDice.style.left = `${maxX - 7}px`; //activeDice = null;\n      } else if (x < minX) {\n        activeDice.style.left = `${minX + 5}px`; //activeDice = null;\n      } else {\n        activeDice.style.left = `${x}px`;\n      }\n\n      if (y > maxY) {\n        activeDice.style.top = `${maxY - 9}px`; //activeDice = null;\n      } else if (y < minY) {\n        activeDice.style.top = `${minY + 5}px`; //activeDice = null;\n      } else {\n        activeDice.style.top = `${y}px`;\n        console.log(activeDice.style.top);\n        console.log(y);\n      }\n    }\n  }\n\n  function dropPiece(e) {\n    if (activeDice) {\n      // const board = boardRef.current;\n      // const minX = board.offsetLeft;\n      // const minY = board.offsetTop;\n      // const x = (Math.floor((e.clientX - minX) / 60) * 60) + minX + 6;\n      // const y = (Math.floor((e.clientY - minY) / 60) * 60) + minX + 6;\n      // activeDice.style.top = `${y}px`;\n      // activeDice.style.left = `${x}px`;\n      activeDice = null;\n    }\n  }\n\n  let boardArray = [];\n\n  for (let i = 0; i < 12; i++) {\n    for (let j = 0; j < 12; j++) {\n      if (i == 0) {\n        boardArray.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"boardsquare\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"dice\",\n            children: diceArray[j]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 58\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 33\n        }, this));\n      } else {\n        boardArray.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"boardsquare\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 33\n        }, this));\n      }\n    }\n  }\n\n  console.log(boardArray);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onMouseDown: e => grabPiece(e),\n    onMouseMove: e => movePiece(e),\n    onMouseUp: e => dropPiece(e),\n    class: \"board\",\n    ref: boardRef,\n    children: boardArray\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Board, \"XcdElC4+nkqWjXVI0f2NZ9bgrbc=\");\n\n_c = Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["BoardSquare","Dice","useState","useRef","diceArray","Board","boardRef","activeDice","grabPiece","e","element","target","board","current","classList","contains","grabX","Math","floor","clientX","offsetLeft","grabY","abs","ceil","clientY","offsetTop","setGrabPosition","x","y","console","log","style","top","position","left","movePiece","minX","minY","maxX","clientWidth","maxY","clientHeight","dropPiece","boardArray","i","j","push"],"sources":["/Users/Tyla/Desktop/Programming/OSU/Classes/361/qless/src/components/Board.js"],"sourcesContent":["import BoardSquare from \"../components/BoardSquare.js\"\nimport Dice from \"../components/Dice.js\"\nimport {useState, useRef} from \"react\";\n\n\nlet diceArray = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\"];\n\nexport default function Board() {\n    const boardRef = useRef(null);\n    //const [board, setBoard] = useState(initialBoardState);\n\n    let activeDice = null;\n\n    function grabPiece(e) {\n        const element = e.target;\n        const board = boardRef.current;\n        \n        if (element.classList.contains(\"dice\") && board) {\n            const grabX = Math.floor((e.clientX - board.offsetLeft) / 60);\n            const grabY = Math.abs(Math.ceil((e.clientY - board.offsetTop - 800) / 60));\n            setGrabPosition({ x: grabX, y: grabY });\n            \n            const x = e.clientX - 30;\n            const y = e.clientY - 30;\n            \n            console.log(activeDice.style.top);\n            console.log(y);\n\n            activeDice.style.position = \"absolute\";\n            activeDice.style.left = `${x}px`;\n            activeDice.style.top = `${y}px`;\n            \n            \n        }\n    }\n\n    function movePiece(e) {\n        const board = boardRef.current;\n        if (activeDice && board) { \n            console.log(activeDice);\n\n            const minX = board.offsetLeft;\n            const minY = board.offsetTop;\n            const maxX = board.offsetLeft + board.clientWidth - 45;\n            const maxY = board.offsetTop + board.clientHeight - 45;\n            const x = e.clientX - 30;\n            const y = e.clientY - 30;\n            activeDice.style.position = \"absolute\";\n            \n            if (x > maxX) {\n                activeDice.style.left = `${maxX - 7}px`;\n                //activeDice = null;\n            } else if (x < minX) {\n                activeDice.style.left = `${minX + 5}px`;\n                //activeDice = null;\n            } else {\n                activeDice.style.left = `${x}px`;\n            }\n\n            if (y > maxY) {\n                activeDice.style.top = `${maxY - 9}px`;\n                //activeDice = null;\n            } else if (y < minY) {\n                activeDice.style.top = `${minY + 5}px`;\n                //activeDice = null;\n            } else {\n                activeDice.style.top = `${y}px`;\n                console.log(activeDice.style.top);\n                console.log(y);\n            }\n\n        }\n    }\n\n    function dropPiece(e) {\n        if (activeDice) {\n            // const board = boardRef.current;\n            // const minX = board.offsetLeft;\n            // const minY = board.offsetTop;\n            // const x = (Math.floor((e.clientX - minX) / 60) * 60) + minX + 6;\n            // const y = (Math.floor((e.clientY - minY) / 60) * 60) + minX + 6;\n            // activeDice.style.top = `${y}px`;\n            // activeDice.style.left = `${x}px`;\n\n            activeDice = null;\n        }\n    }\n\n    let boardArray = [];\n    for (let i = 0; i < 12; i++) {\n        for (let j = 0; j < 12; j++) {\n            if (i == 0) {\n                boardArray.push(<div class=\"boardsquare\"><div class=\"dice\">{diceArray[j]}</div></div>);\n            } else {\n                boardArray.push(<div class=\"boardsquare\"></div>);\n            }\n        }\n    }\n    console.log(boardArray);\n    return (<div onMouseDown={e => grabPiece(e)}\n                 onMouseMove={e => movePiece(e)}\n                 onMouseUp={e => dropPiece(e)}\n                 class=\"board\"\n                 ref={boardRef}>{boardArray}</div>\n                 );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}